language: cpp
dist: bionic
matrix:
  include:
    - name: "Clang 10 @ Ubuntu x86_64-linux-gnu"
      os: linux
      addons: &clang10
        apt:
          sources:
            - sourceline: ppa:ubuntu-toolchain-r/test
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main'
              key_url: https://apt.llvm.org/llvm-snapshot.gpg.key
          packages:
            - libstdc++-10-dev
            - clang-10
            - clang-tidy-10
      env:
        - CC=clang-10 CXX=clang++-10
        - BUILD_TYPE=RelWithDebInfo
        - COVERAGE=0
        - ANALYSIS=0
    - name: "Clang 10 Analysis @ Ubuntu x86_64-linux-gnu"
      os: linux
      addons: *clang10
      env:
        - CC=clang-10 CXX=clang++-10
        - BUILD_TYPE=Debug
        - COVERAGE=0
        - ANALYSIS=1
    - name: "GCC 10 Coverage @ Ubuntu x86_64-linux-gnu"
      os: linux
      addons:
        apt:
          sources:
            - sourceline: ppa:ubuntu-toolchain-r/test
          packages:
            - g++-10
      env:
        - CC=gcc-10 CXX=g++-10 GCOV_BINARY=/usr/bin/gcov-10
        - BUILD_TYPE=Debug
        - CMAKE_PREFIX_PATH="$HOME/.local/usr/local" # gcov location
        - COVERAGE=1
        - ANALYSIS=0
      install:
        - sudo apt-get -y install libperlio-gzip-perl libconfig-json-perl
        - wget https://github.com/linux-test-project/lcov/archive/master.zip -O lcov.zip
        - unzip lcov.zip
        - make -C lcov-master install DESTDIR=$HOME/.local
        - cp $GCOV_BINARY $HOME/.local/usr/local/bin/gcov
      after_success:
        - bash <(curl -s https://codecov.io/bash)
script:
  - mkdir build
  - cd build
  - |
    cmake .. \
        -DBUILD_TESTING=1 \
        -DGTA3SC_COVERAGE=$COVERAGE \
        -DGTA3SC_ANALYSIS=$ANALYSIS \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - cmake --build . --target coverage
