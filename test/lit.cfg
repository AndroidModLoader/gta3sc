# -*- Python -*-

import os
import sys

import lit.formats

# Configuration file for the 'lit' test runner.

# Our own getTestsInDirectory to avoid too avoid reading subscripts. 
class GTA3ScriptTest(lit.formats.ShTest):
    def __init__(self, execute_external = False):
        super(GTA3ScriptTest, self).__init__(execute_external=execute_external)


    def getTestsInDirectory(self, testSuite, path_in_suite,
                            litConfig, localConfig):
	# Only allow one level of recursion in the test paths
	if len(path_in_suite) == 1:
		return super(GTA3ScriptTest, self).getTestsInDirectory(testSuite, path_in_suite, litConfig, localConfig)
	return []

def infer_gta3sc(PATH):
    gta3sc = os.getenv('GTA3SC') or lit.util.which('gta3sc', PATH)
    if not gta3sc:
        lit_config.fatal("couldn't find 'gta3sc' program, try setting "
                         "GTA3SC in your environment")
    return gta3sc

# name: The name of this test suite.
config.name = 'gta3sc'

# testFormat: The test format to use to interpret tests.
execute_external = (not sys.platform in ['win32'])
config.test_format = GTA3ScriptTest(execute_external=execute_external)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.sc', '.test']

# excludes: A list of individual files to exclude.
config.excludes = ['Inputs']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = config.test_source_root

config.target_triple = '(unused)'

config.gta3sc = infer_gta3sc(config.environment['PATH']).replace('\\', '/')
config.checksum = os.path.join(config.test_source_root, "Checksum.sh").replace('\\', '/')
config.substitutions.append(('%gta3sc', config.gta3sc))
config.substitutions.append(('%checksum', 'sh "%s"' % config.checksum))

